{"version":3,"file":"static/js/851.576880f8.chunk.js","mappings":"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","sources":["API/address.js","API/cart.js","API/user.js","AdditionalFunction.js","Components/Header.js"],"sourcesContent":["// API/address.js\nimport { DOMAIN } from \"../AdditionalFunction\";\nconst host = `${DOMAIN}/address`\nexport const postAddress = async (address) => {\n    const response = await fetch(`${host}/postaddress`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"authtoken\": localStorage.getItem(\"authtoken\"),\n        },\n        body: JSON.stringify(address),\n    });\n    const data = await response.json();\n\n    if (data.status === \"success\")\n        return { status: \"success\" };\n    return { status: \"error\", message: \"Something went wrong\" }\n}\n\nexport const getAddress = async () => {\n    const response = await fetch(`${host}/getaddress`, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"authtoken\": localStorage.getItem(\"authtoken\"),\n        },\n    });\n    const data = await response.json();\n    return data;\n}\n","// API/cart.js\nimport { DOMAIN } from \"../AdditionalFunction\";\n\nconst host = `${DOMAIN}/cart`;\n\nexport const getCart = async () => {\n  try {\n    const response = await fetch(`${host}/getcart`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch cart\");\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error during cart data fetch:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const postCart = async (product_id,quantity) => {\n  try {\n    const response = await fetch(`${host}/postcart`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n      body: JSON.stringify({product_id,quantity}),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to add item to cart\");\n    }\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"Item added to cart successfully\" };\n    }\n\n    return { status: \"error\", message: \"Error adding item to cart\" };\n  } catch (error) {\n    console.error(\"Error during item addition to cart:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const deletecart = async (product_id) => {\n  try {\n    const response = await fetch(`${host}/deletecart`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n      body: JSON.stringify({ product_id }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to delete item from cart\");\n    }\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"Item deleted from cart successfully\" };\n    }\n\n    return { status: \"error\", message: \"Error deleting item from cart\" };\n  } catch (error) {\n    console.error(\"Error during item deletion from cart:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const putCart = async (product_id, quantity) => {\n  try {\n    const response = await fetch(`${host}/putcart`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n      body: JSON.stringify({ product_id, quantity }),\n    });\n\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"Cart item updated successfully\" };\n    }\n    \n    return { status: \"error\", message: \"Error updating item in cart\" };\n  } catch (error) {\n    console.error(\"Error during cart item update:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const bulkPostCart = async (cartList) => {\n  try {\n    const response = await fetch(`${host}/bulkpostcart`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n      body: JSON.stringify({ cartItems: cartList }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to merge cart items\");\n    }\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"Cart items merged successfully\" };\n    }\n\n    return { status: \"error\", message: \"Error merging cart items\" };\n  } catch (error) {\n    console.error(\"Error during cart item merge:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};","// API/user.js\nimport { DOMAIN } from \"../AdditionalFunction\";\n\nconst host = `${DOMAIN}/credentials`;\n\nexport const login = async (email, password) => {\n    try {\n        const response = await fetch(`${host}/loginuser`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Login failed\");\n        }\n\n        const data = await response.json();\n        if (data.status === \"success\") {\n            localStorage.setItem(\"authtoken\", data.data.token);\n            return { status: \"success\", message: \"Login successful\", name: data.data.name };\n        } else {\n            return { status: \"error\", message: data.error || \"Invalid credentials\" };\n        }\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        return { status: \"error\", message: \"Something went wrong!\" };\n    }\n};\n\nexport const createAccount = async (name, email, password) => {\n    try {\n        const response = await fetch(`${host}/createuser`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ name, email, password }),\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Account creation failed\");\n        }\n\n        const data = await response.json();\n        if (data.status === \"success\") {\n            localStorage.setItem(\"authtoken\", data.data.authtoken);\n            return { status: \"success\", message: \"Account created successfully\", name: name };\n        } else {\n            return { status: \"error\", message: data.error || \"Error creating account\" };\n        }\n    } catch (error) {\n        console.error(\"Error during account creation:\", error);\n        return { status: \"error\", message: \"Something went wrong!\" };\n    }\n};\n\nexport const getUser = async () => {\n    try {\n        const response = await fetch(`${host}/getuser`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authtoken\": localStorage.getItem(\"authtoken\"),\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch user\");\n        }\n\n        const data = await response.json();\n        if (data.status === \"success\") {\n            return { status: \"success\", message: \"User data fetched successfully\", name: data.data.name };\n        } else {\n            return { status: \"error\", message: data.error || \"Error fetching user data\" };\n        }\n    } catch (error) {\n        console.error(\"Error during user data fetch:\", error);\n        return { status: \"error\", message: \"Something went wrong!\" };\n    }\n};\n\nexport const logout = async () => {\n    try {\n        localStorage.removeItem(\"authtoken\");\n\n        return { status: \"success\", message: \"Logout successful\" };\n    } catch (error) {\n        console.error(\"Error during logout:\", error);\n        return { status: \"error\", message: \"Something went wrong!\" };\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const host = \"\"\nconst DOMAIN = `${host}/api`\nconst findInObjectArray = (arr, key, value) => {\n    for (let i = 0; i < arr.length; i++) {\n        const element = arr[i];\n        if (element[key] === value) {\n            return true\n        }\n    }\n    return false\n}\nconst union = (databaseCart, reduxCart) => {\n    const arr = [];\n    [...databaseCart, ...reduxCart].forEach((item) => {\n        if (!findInObjectArray(arr, \"product_id\", item.product_id)) {\n            arr.push(item);\n        }\n    })\n    return arr;\n}\nconst difference = (databaseCart, reduxCart) => {\n    const arr = [];\n    reduxCart.forEach((item) => {\n        if (!findInObjectArray(databaseCart, \"product_id\", item.product_id)) {\n            arr.push(item);\n        }\n    })\n    return arr;\n}\n\nconst mergeCart = (databaseCart, reduxCart) => {\n    return { union: union(databaseCart, reduxCart), difference: difference(databaseCart, reduxCart) };\n}\n\n\nconst findIndexof = (cart,key, value) => {\n    for (let i = 0; i < cart.length; i++) {\n        const element = cart[i];\n        if (element[key] === value) {\n            return i;\n        }\n    }\n    return -1;\n};\n\nconst shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n\nconst FinalBalance=cart=>{\n    let total = 0;\n    for (let i = 0; i < cart.length; i++) {\n      const item = cart[i];\n      total = total+item.quantity*item.price;\n    }\n    return total;\n  };\n\n\nexport { DOMAIN, findInObjectArray, union, difference, mergeCart, findIndexof , shuffleArray, FinalBalance}","import React, { useEffect, useState } from \"react\";\nimport logo from \"./Logo/amazon-logo.png\";\nimport ShoppingBasketIcon from \"@mui/icons-material/ShoppingBasket\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../API/user\";\nimport { bulkPostCart, getCart } from \"../API/cart\";\nimport { setToUser, resetUser } from \"../Redux/Slice/userSlice\";\nimport { resetCart, setCart } from \"../Redux/Slice/cartSlice\";\nimport { resetAddress, setToAddress } from \"../Redux/Slice/addressSlice\";\nimport { mergeCart } from \"../AdditionalFunction\";\nimport { getAddress } from \"../API/address\";\n\n// Styled component for the header\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background-color: #131921;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  transition: background-color 0.5s ease;\n\n  .logo {\n    width: 100px;\n    object-fit: contain;\n    margin: 0 20px;\n    margin-top: 18px;\n  }\n\n  .nav {\n    display: flex;\n    align-items: center;\n    color: white;\n\n    .option {\n      display: flex;\n      flex-direction:column;\n      margin: 0 10px;\n      cursor: pointer;\n      transition: color 0.3s ease;\n      color:white;\n      &:hover {\n        color: #ffd700;\n      }\n\n      .lineOne {\n        font-size: 10px;\n      }\n\n      .lineTwo {\n        font-size: 13px;\n        font-weight: 800;\n      }\n    }\n\n    .basket {\n      display: flex;\n      align-items: center;\n      margin-right: 20px;\n      cursor: pointer;\n      position: relative;\n      color:white;\n\n      .basketCount {\n        background-color: #ffd700;\n        color: #111;\n        padding: 2px 5px;\n        border-radius: 50%;\n        position: absolute;\n        top: 0;\n        right: 0;\n        font-size: 12px;\n        font-weight: 700;\n      }\n    }\n  }\n\n  @media (max-width: 768px) {\n    .logo {\n      width: 80px;\n    }\n    .nav {\n      .option {\n        margin: 5px 10px;\n      }\n    }\n  }\n`;\nconst Header = () => {\n  const [name, setName] = useState(\"\");\n  const [cartCount, setCartCount] = useState(0);\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const fetchUser = async () => {\n    const response = await getUser();\n    return response.status === \"success\" ? response.name : \"\";\n  };\n  \n  const fetchCart = async () => {\n    const response = await getCart();\n    return response.status === \"success\" ? response.data : [];\n  };\n  \n  const fetchAddress = async () => {\n    const response = await getAddress();\n    return response.status === \"success\" ? response.data : {};\n  };\n\n  const fetchData = async () => {\n    const authToken = localStorage.getItem(\"authtoken\");\n    if (authToken) {\n      const userName = await fetchUser();\n      setName(userName);\n      dispatch(setToUser({ name: userName }));\n      const address = await fetchAddress();\n      dispatch(setToAddress({ address }));\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const fetchCartData = async () => {\n      const cartData = await fetchCart();\n\n      if (name && cartCount !== 0 && cartData.length !== 0) {\n        const { union, difference } = mergeCart(cartData, cart);\n        dispatch(resetCart());\n        if (union.length!==0) dispatch(setCart({ cartItems: union }));\n        if (difference.length!==0) await bulkPostCart(difference);\n      } else if (name && cartCount !== 0 && cartData.length === 0) {\n        await bulkPostCart(cart);\n      } else if (name && cartCount === 0 && cartData.length !== 0) {\n        dispatch(setCart({ cartItems: cartData }));\n      }\n    };\n\n    if (name!==\"\") {\n      fetchCartData();\n      console.log(\"count\")\n    }\n    // eslint-disable-next-line\n  },[name]);\n\n  useEffect(() => {\n    setCartCount(cart.length);\n  }, [cart]);\n\n  const handleAuthentication = () => {\n    if (name) {\n      localStorage.removeItem(\"authtoken\");\n      setName(\"\");\n      dispatch(resetUser());\n      dispatch(resetCart());\n      dispatch(resetAddress());\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      {/* Amazon logo */}\n      <Link to=\"/\">\n        <img src={logo} alt=\"Amazon logo\" className=\"logo\" />\n      </Link>\n\n      {/* Navigation options */}\n      <div className=\"nav\">\n        {/* Option: Sign In */}\n        <Link\n          to={!name && \"/login\"}\n          className=\"option\"\n          onClick={handleAuthentication}\n        >\n          <span className=\"lineOne\">Hello {name!==\"\" ? name.split(\" \")[0] : \"Guest\"}</span>\n          <span className=\"lineTwo\">{name ? \"Sign Out\" : \"Sign in\"}</span>\n        </Link>\n\n        {/* Option: Returns and Orders */}\n        <Link to=\"/order\" className=\"option\">\n          <span className=\"lineOne\">Returns</span>\n          <span className=\"lineTwo\">& Orders</span>\n        </Link>\n\n        {/* Shopping basket */}\n        <Link to=\"/checkout\" className=\"basket\">\n          <ShoppingBasketIcon />\n          <span className=\"basketCount\">{cartCount}</span>\n        </Link>\n      </div>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;"],"names":["host","concat","DOMAIN","postAddress","async","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","address","json","status","message","getAddress","getCart","authtoken","ok","Error","error","console","postCart","product_id","quantity","deletecart","putCart","bulkPostCart","cartItems","cartList","login","email","password","data","setItem","token","name","createAccount","getUser","findInObjectArray","arr","key","value","i","length","union","databaseCart","reduxCart","forEach","item","push","difference","mergeCart","findIndexof","cart","FinalBalance","total","price","HeaderContainer","styled","div","_templateObject","_taggedTemplateLiteral","Header","setName","useState","cartCount","setCartCount","useSelector","state","dispatch","useDispatch","fetchAddress","fetchData","userName","fetchUser","setToUser","setToAddress","useEffect","cartData","fetchCart","resetCart","setCart","fetchCartData","log","_jsxs","children","_jsx","Link","to","src","alt","className","onClick","handleAuthentication","removeItem","resetUser","resetAddress","split","ShoppingBasketIcon"],"sourceRoot":""}