{"version":3,"file":"static/js/776.69fe7346.chunk.js","mappings":"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","sources":["API/order.js","AdditionalFunction.js","Components/Order/Order.js"],"sourcesContent":["// API/order.js\nimport { DOMAIN } from \"../AdditionalFunction\";\n\nconst host = `${DOMAIN}/order`;\n\nexport const getOrder = async () => {\n  try {\n    const response = await fetch(`${host}/getorder`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch order data\");\n    }\n    const data = await response.json();\n    return data.data;\n  } catch (error) {\n    console.error(\"Error during order data fetch:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const postOrder = async () => {\n  try {\n    const response = await fetch(`${host}/postorder`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to create a new order\");\n    }\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"New order created successfully\", orderId:data.orderId };\n    }\n\n    return { status: \"error\", message: \"Error creating a new order\" };\n  } catch (error) {\n    console.error(\"Error during new order creation:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\n\nexport const orderbyId = async(orderId)=>{\n  try {\n    const response = await fetch(`${host}/orderbyid/${orderId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch order data\");\n    }\n\n    const data = await response.json();\n    return data.data;\n  } catch (error) {\n    console.error(\"Error during order data fetch:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n}","const host = \"\"\nconst DOMAIN = `${host}/api`\nconst findInObjectArray = (arr, key, value) => {\n    for (let i = 0; i < arr.length; i++) {\n        const element = arr[i];\n        if (element[key] === value) {\n            return true\n        }\n    }\n    return false\n}\nconst union = (databaseCart, reduxCart) => {\n    const arr = [];\n    [...databaseCart, ...reduxCart].forEach((item) => {\n        if (!findInObjectArray(arr, \"product_id\", item.product_id)) {\n            arr.push(item);\n        }\n    })\n    return arr;\n}\nconst difference = (databaseCart, reduxCart) => {\n    const arr = [];\n    reduxCart.forEach((item) => {\n        if (!findInObjectArray(databaseCart, \"product_id\", item.product_id)) {\n            arr.push(item);\n        }\n    })\n    return arr;\n}\n\nconst mergeCart = (databaseCart, reduxCart) => {\n    return { union: union(databaseCart, reduxCart), difference: difference(databaseCart, reduxCart) };\n}\n\n\nconst findIndexof = (cart,key, value) => {\n    for (let i = 0; i < cart.length; i++) {\n        const element = cart[i];\n        if (element[key] === value) {\n            return i;\n        }\n    }\n    return -1;\n};\n\nconst shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n\nconst FinalBalance=cart=>{\n    let total = 0;\n    for (let i = 0; i < cart.length; i++) {\n      const item = cart[i];\n      total = total+item.quantity*item.price;\n    }\n    return total;\n  };\n\n\nexport { DOMAIN, findInObjectArray, union, difference, mergeCart, findIndexof , shuffleArray, FinalBalance}","// OrderHistory.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getOrder } from '../../API/order';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst OrderList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst OrderItem = styled.li`\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst OrderLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-weight: bold;\r\n  flex: 1;\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst CountBox = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: auto;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst formatOrderDate = (dateString) => {\r\n  const options = { day: 'numeric', month: 'short', year: 'numeric', hour: 'numeric', minute: 'numeric' };\r\n  const formattedDate = new Date(dateString).toLocaleDateString('en-US', options);\r\n  return formattedDate;\r\n};\r\n\r\nconst Order = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const fetchOrders = async () => {\r\n    const data = await getOrder();\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await fetchOrders();\r\n      setOrders(data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Your Order History</h2>\r\n      {orders.length === 0 ? (\r\n        <p>No orders found.</p>\r\n      ) : (\r\n        <OrderList>\r\n          {orders.map((order) => (\r\n            <OrderItem key={order.order_id}>\r\n              <OrderLink to={`/order/${order.order_id}`}>\r\n                {`Order #${order.order_id} - ${formatOrderDate(order.date)}`}\r\n              </OrderLink>\r\n              {order.order_item.slice(0, 3).map((item, index) => (\r\n                <ImageBox key={item.product_id}>\r\n                  <img src={item.image} alt={`Product ${index + 1}`} style={{ width: '100%', height: '100%' }} />\r\n                </ImageBox>\r\n              ))}\r\n              {order.order_item.length > 3 && (\r\n                <CountBox>+{order.order_item.length - 3}</CountBox>\r\n              )}\r\n            </OrderItem>\r\n          ))}\r\n        </OrderList>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"],"names":["host","concat","DOMAIN","getOrder","async","response","fetch","method","headers","authtoken","localStorage","getItem","ok","Error","json","data","error","console","status","message","postOrder","orderId","orderbyId","findInObjectArray","arr","key","value","i","length","union","databaseCart","reduxCart","forEach","item","product_id","push","difference","mergeCart","findIndexof","cart","FinalBalance","total","quantity","price","Container","styled","div","_templateObject","_taggedTemplateLiteral","OrderList","ul","_templateObject2","OrderItem","li","_templateObject3","OrderLink","Link","_templateObject4","ImageBox","_templateObject5","CountBox","_templateObject6","Order","orders","setOrders","useState","useEffect","fetchOrders","fetchData","_jsxs","children","_jsx","map","order","to","order_id","dateString","date","Date","toLocaleDateString","day","month","year","hour","minute","order_item","slice","index","src","image","alt","style","width","height"],"sourceRoot":""}