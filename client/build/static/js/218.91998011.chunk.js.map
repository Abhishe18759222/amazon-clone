{"version":3,"file":"static/js/218.91998011.chunk.js","mappings":"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","sources":["API/user.js","AdditionalFunction.js","Components/Credentials/Registration.js"],"sourcesContent":["// API/user.js\nimport { DOMAIN } from \"../AdditionalFunction\";\n\nconst host = `${DOMAIN}/credentials`;\n\nexport const login = async (email, password) => {\n    try {\n        const response = await fetch(`${host}/loginuser`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Login failed\");\n        }\n\n        const data = await response.json();\n        if (data.status === \"success\") {\n            localStorage.setItem(\"authtoken\", data.data.token);\n            return { status: \"success\", message: \"Login successful\", name: data.data.name };\n        } else {\n            return { status: \"error\", message: data.error || \"Invalid credentials\" };\n        }\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        return { status: \"error\", message: \"Something went wrong!\" };\n    }\n};\n\nexport const createAccount = async (name, email, password) => {\n    try {\n        const response = await fetch(`${host}/createuser`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ name, email, password }),\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Account creation failed\");\n        }\n\n        const data = await response.json();\n        if (data.status === \"success\") {\n            localStorage.setItem(\"authtoken\", data.data.authtoken);\n            return { status: \"success\", message: \"Account created successfully\", name: name };\n        } else {\n            return { status: \"error\", message: data.error || \"Error creating account\" };\n        }\n    } catch (error) {\n        console.error(\"Error during account creation:\", error);\n        return { status: \"error\", message: \"Something went wrong!\" };\n    }\n};\n\nexport const getUser = async () => {\n    try {\n        const response = await fetch(`${host}/getuser`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authtoken\": localStorage.getItem(\"authtoken\"),\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch user\");\n        }\n\n        const data = await response.json();\n        if (data.status === \"success\") {\n            return { status: \"success\", message: \"User data fetched successfully\", name: data.data.name };\n        } else {\n            return { status: \"error\", message: data.error || \"Error fetching user data\" };\n        }\n    } catch (error) {\n        console.error(\"Error during user data fetch:\", error);\n        return { status: \"error\", message: \"Something went wrong!\" };\n    }\n};\n\nexport const logout = async () => {\n    try {\n        localStorage.removeItem(\"authtoken\");\n\n        return { status: \"success\", message: \"Logout successful\" };\n    } catch (error) {\n        console.error(\"Error during logout:\", error);\n        return { status: \"error\", message: \"Something went wrong!\" };\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const host = \"\"\nconst DOMAIN = `${host}/api`\nconst findInObjectArray = (arr, key, value) => {\n    for (let i = 0; i < arr.length; i++) {\n        const element = arr[i];\n        if (element[key] === value) {\n            return true\n        }\n    }\n    return false\n}\nconst union = (databaseCart, reduxCart) => {\n    const arr = [];\n    [...databaseCart, ...reduxCart].forEach((item) => {\n        if (!findInObjectArray(arr, \"product_id\", item.product_id)) {\n            arr.push(item);\n        }\n    })\n    return arr;\n}\nconst difference = (databaseCart, reduxCart) => {\n    const arr = [];\n    reduxCart.forEach((item) => {\n        if (!findInObjectArray(databaseCart, \"product_id\", item.product_id)) {\n            arr.push(item);\n        }\n    })\n    return arr;\n}\n\nconst mergeCart = (databaseCart, reduxCart) => {\n    return { union: union(databaseCart, reduxCart), difference: difference(databaseCart, reduxCart) };\n}\n\n\nconst findIndexof = (cart,key, value) => {\n    for (let i = 0; i < cart.length; i++) {\n        const element = cart[i];\n        if (element[key] === value) {\n            return i;\n        }\n    }\n    return -1;\n};\n\nconst shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n\nconst FinalBalance=cart=>{\n    let total = 0;\n    for (let i = 0; i < cart.length; i++) {\n      const item = cart[i];\n      total = total+item.quantity*item.price;\n    }\n    return total;\n  };\n\n\nexport { DOMAIN, findInObjectArray, union, difference, mergeCart, findIndexof , shuffleArray, FinalBalance}","import logo from \"../Logo/bw-amazon-logo.png\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { createAccount } from \"../../API/user\";\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n\n  img {\n    width: 100px;\n    object-fit: contain;\n    margin-bottom: 20px;\n  }\n\n  .container {\n    background-color: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    max-width: 400px;\n    width: 100%;\n    text-align: center;\n  }\n\n  h1 {\n    font-size: 1.8rem;\n    margin-bottom: 20px;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  h5 {\n    text-align: left;\n    margin: 10px 0;\n  }\n\n  input {\n    width: 95%;\n    padding: 10px;\n    margin-bottom: 15px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    transition: border-color 0.3s ease;\n  }\n\n  input:focus {\n    outline: none;\n    border-color: #007185;\n  }\n\n  .border_red {\n    border-color: #ff0000 !important;\n  }\n\n  button {\n    width: 100%;\n    height: 40px; /* Adjust height as needed */\n    background-color: #f0c14b;\n    border: 1px solid;\n    border-color: #a88734 #9c7e31 #846a29;\n    color: #111;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n\n  button:hover {\n    background-color: #ddb347;\n  }\n\n  .policies {\n    margin-top: 20px;\n    font-size: 0.8rem;\n    color: #555;\n  }\n\n  .signInPage {\n    margin-top: 20px;\n  }\n\n  .login {\n    color: #007185;\n    text-decoration: none;\n    font-weight: bold;\n    transition: color 0.3s ease;\n  }\n\n  .login:hover {\n    color: #004554;\n  }\n\n  @media (max-width: 600px) {\n    .container {\n      max-width: 90%;\n    }\n  }\n`;\nconst Registration = () => {\n    const navigate = useNavigate();\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const validateEmail = (email) => {\n        // Regular expression pattern for basic email validation\n        const pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return pattern.test(email);\n    };\n\n    const signUp = async (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword || !validateEmail(email)) {\n            return;\n        }\n        const responce = await createAccount(name, email, password)\n        if (responce.status === \"success\") {\n            navigate(\"/\");\n        }\n        else {\n            alert(\"Something went Wrong ! Please re-try\")\n        }\n    };\n\n    return (\n        <Div>\n            <Link to=\"/\">\n                <img src={logo} alt=\"\" />\n            </Link>\n            <div className=\"container\">\n                <h1>Create account</h1>\n                <form>\n                    <h5>Your name</h5>\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => {\n                            setName(e.target.value);\n                        }}\n                        placeholder=\"First and last name\"\n                        required\n                    />\n                    <h5>Email</h5>\n                    <input\n                        type=\"text\"\n                        value={email}\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                        placeholder=\"Enter Email\"\n                        required\n                    />\n                    <h5>Password</h5>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        className={`${password !== confirmPassword ? \"border_red\" : \"\"}`}\n                        onChange={(e) => {\n                            setPassword(e.target.value);\n                        }}\n                        placeholder=\"At least 8 characters\"\n                        required\n                    />\n                    <h5>Confirm Password</h5>\n                    <input\n                        type=\"password\"\n                        value={confirmPassword}\n                        className={`${password !== confirmPassword ? \"border_red\" : \"\"}`}\n                        onChange={(e) => {\n                            setConfirmPassword(e.target.value);\n                        }}\n                        placeholder=\"Re-enter Password\"\n                        required\n                    />\n                    <button\n                        type=\"submit\"\n                        onClick={signUp}\n                        disabled={password !== confirmPassword || !validateEmail(email)}\n                    >\n                        Continue\n                    </button>\n                </form>\n                <p className=\"policies\">\n                    By creating an account, you agree to Amazon's Conditions of Use and\n                    Privacy Notice.\n                </p>\n\n                <div className=\"signInPage\">\n                    <p>\n                        Already have an account? <Link to=\"/login\" className=\"login\">Sign in</Link>\n                    </p>\n                </div>\n            </div>\n        </Div>\n    );\n};\n\nexport default Registration;"],"names":["host","concat","DOMAIN","login","async","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","status","localStorage","setItem","token","message","name","error","console","createAccount","authtoken","getUser","getItem","findInObjectArray","arr","key","value","i","length","union","databaseCart","reduxCart","forEach","item","product_id","push","difference","mergeCart","findIndexof","cart","FinalBalance","total","quantity","price","Div","styled","div","_templateObject","_taggedTemplateLiteral","Registration","navigate","useNavigate","setName","useState","setEmail","setPassword","confirmPassword","setConfirmPassword","validateEmail","test","_jsxs","children","_jsx","Link","to","src","logo","alt","className","type","onChange","e","target","placeholder","required","onClick","preventDefault","alert","disabled"],"sourceRoot":""}