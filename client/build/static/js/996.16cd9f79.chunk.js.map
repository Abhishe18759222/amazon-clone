{"version":3,"file":"static/js/996.16cd9f79.chunk.js","mappings":"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","sources":["API/cart.js","AdditionalFunction.js","Components/Home/Product.js","API/product.js","Components/Home/Home.js"],"sourcesContent":["// API/cart.js\nimport { DOMAIN } from \"../AdditionalFunction\";\n\nconst host = `${DOMAIN}/cart`;\n\nexport const getCart = async () => {\n  try {\n    const response = await fetch(`${host}/getcart`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch cart\");\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error during cart data fetch:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const postCart = async (product_id,quantity) => {\n  try {\n    const response = await fetch(`${host}/postcart`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n      body: JSON.stringify({product_id,quantity}),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to add item to cart\");\n    }\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"Item added to cart successfully\" };\n    }\n\n    return { status: \"error\", message: \"Error adding item to cart\" };\n  } catch (error) {\n    console.error(\"Error during item addition to cart:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const deletecart = async (product_id) => {\n  try {\n    const response = await fetch(`${host}/deletecart`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n      body: JSON.stringify({ product_id }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to delete item from cart\");\n    }\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"Item deleted from cart successfully\" };\n    }\n\n    return { status: \"error\", message: \"Error deleting item from cart\" };\n  } catch (error) {\n    console.error(\"Error during item deletion from cart:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const putCart = async (product_id, quantity) => {\n  try {\n    const response = await fetch(`${host}/putcart`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n      body: JSON.stringify({ product_id, quantity }),\n    });\n\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"Cart item updated successfully\" };\n    }\n    \n    return { status: \"error\", message: \"Error updating item in cart\" };\n  } catch (error) {\n    console.error(\"Error during cart item update:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};\n\nexport const bulkPostCart = async (cartList) => {\n  try {\n    const response = await fetch(`${host}/bulkpostcart`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authtoken: localStorage.getItem(\"authtoken\"),\n      },\n      body: JSON.stringify({ cartItems: cartList }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to merge cart items\");\n    }\n\n    const data = await response.json();\n    if (data.status === \"success\") {\n      return { status: \"success\", message: \"Cart items merged successfully\" };\n    }\n\n    return { status: \"error\", message: \"Error merging cart items\" };\n  } catch (error) {\n    console.error(\"Error during cart item merge:\", error);\n    return { status: \"error\", message: \"Something went wrong!\" };\n  }\n};","const host = \"\"\nconst DOMAIN = `${host}/api`\nconst findInObjectArray = (arr, key, value) => {\n    for (let i = 0; i < arr.length; i++) {\n        const element = arr[i];\n        if (element[key] === value) {\n            return true\n        }\n    }\n    return false\n}\nconst union = (databaseCart, reduxCart) => {\n    const arr = [];\n    [...databaseCart, ...reduxCart].forEach((item) => {\n        if (!findInObjectArray(arr, \"product_id\", item.product_id)) {\n            arr.push(item);\n        }\n    })\n    return arr;\n}\nconst difference = (databaseCart, reduxCart) => {\n    const arr = [];\n    reduxCart.forEach((item) => {\n        if (!findInObjectArray(databaseCart, \"product_id\", item.product_id)) {\n            arr.push(item);\n        }\n    })\n    return arr;\n}\n\nconst mergeCart = (databaseCart, reduxCart) => {\n    return { union: union(databaseCart, reduxCart), difference: difference(databaseCart, reduxCart) };\n}\n\n\nconst findIndexof = (cart,key, value) => {\n    for (let i = 0; i < cart.length; i++) {\n        const element = cart[i];\n        if (element[key] === value) {\n            return i;\n        }\n    }\n    return -1;\n};\n\nconst shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n\nconst FinalBalance=cart=>{\n    let total = 0;\n    for (let i = 0; i < cart.length; i++) {\n      const item = cart[i];\n      total = total+item.quantity*item.price;\n    }\n    return total;\n  };\n\n\nexport { DOMAIN, findInObjectArray, union, difference, mergeCart, findIndexof , shuffleArray, FinalBalance}","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findIndexof } from \"../../AdditionalFunction\";\nimport { postCart, putCart } from \"../../API/cart\";\nimport { addToCart, updateToCart } from \"../../Redux/Slice/cartSlice\";\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  padding: 10px;\n  width: 90%;\n  height: 400px; /* Set a fixed height for all product boxes */\n  min-width: 200px;\n  background-color: white;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  transition: box-shadow 0.3s ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  }\n\n  .info {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    text-align: left;\n    margin-bottom: 15px;\n\n    @media screen and (min-width: 600px) {\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n\n  .rating {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: 10px;\n\n    p {\n      margin: 0; /* Remove default margin */\n    }\n  }\n\n  img {\n    max-height: 200px;\n    width: 100%;\n    object-fit: contain;\n    margin-bottom: 15px;\n    transition: transform 0.3s ease-in-out;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n\n  button {\n    height: 30px;\n    width: 120px;\n    background: #f0c14b;\n    border: 1px solid;\n    margin-top: 10px;\n    border-color: #a88734 #9c7e31 #846a29;\n    color: #111;\n    cursor: pointer;\n    transition: background 0.3s ease-in-out;\n\n    &:hover {\n      background: #d8ab4e;\n    }\n  }\n\n  .price {\n    text-align: center;\n    margin-top: 10px;\n  }\n`;\n\nconst Product = (props) => {\n  const { product_id, title, image, price, rating } = props;\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const addToCartClick = async () => {\n    const index = findIndexof(cart, \"product_id\", product_id);\n    if (index !== -1) {\n      if (localStorage.getItem(\"authtoken\")) {\n        await putCart(product_id, cart[index].quantity + 1);\n      }\n      dispatch(\n        updateToCart({\n          info: { product_id, quantity: cart[index].quantity + 1 },\n        })\n      );\n    } else {\n      if (localStorage.getItem(\"authtoken\")) {\n        await postCart(product_id, 1);\n      }\n      dispatch(\n        addToCart({\n          item: {\n            product_id,\n            title,\n            image,\n            price,\n            quantity: 1,\n          },\n        })\n      );\n    }\n  };\n\n  return (\n    <Div>\n      <div className=\"info\">\n        <div>\n          <p>{title}</p>\n          <p className=\"price\">\n            <small>$</small>\n            <strong>{price}</strong>\n          </p>\n        </div>\n        <div className=\"rating\">\n          {Array(rating)\n            .fill()\n            .map((_, i) => (\n              <p key={i}>🌟</p>\n            ))}\n        </div>\n      </div>\n\n      <img src={image} alt=\"\" />\n\n      <button onClick={addToCartClick}>Add to Cart</button>\n    </Div>\n  );\n};\n\nProduct.propTypes = {\n  product_id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  rating: PropTypes.number,\n};\n\nexport default Product;\n","// API/product.js\nimport { DOMAIN } from \"../AdditionalFunction\";\nconst host = `${DOMAIN}/items`;\nexport const Items = async () => {\n    const response = await fetch(host, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    })\n    const data = await response.json();\n    data.data.forEach(element => {\n        element.price = parseFloat(element.price)\n    });\n    return data.data;\n}","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Product from \"./Product\";\nimport banner from \"../Logo/banner.jpg\";\nimport { Items } from \"../../API/product\";\n\nconst Div = styled.div`\n  .home__container {\n    position: relative;\n    width:auto;\n    margin: 0 auto;\n  }\n\n  .home__image {\n    margin: auto;\n    width: 90%;\n    z-index: -1;\n    mask-image: linear-gradient(to right, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));\n  }\n\n  .home__row {\n    display: grid;\n    gap:5px;\n    grid-template-columns: auto auto auto;\n    justify-content: space-between;\n    margin: 15px;\n    @media screen and (max-width: 768px) {\n      grid-template-columns: auto auto; /* Two items in one row for mobile */\n    }\n\n    @media screen and (max-width: 480px) {\n      grid-template-columns: auto; /* One item in one row for smaller mobile screens */\n    }\n  }\n\n  .home__item {\n    margin: 15px;\n    box-sizing: border-box;\n    transition: transform 0.3s ease-in-out;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n`\n\nconst Home = () => {\n  const [items, setItems] = useState([]);\n\n  const fetchProduct = async () => {\n    const responceProduct = await Items();\n    setItems(responceProduct);\n  };\n\n  useEffect(() => {\n    try {\n      fetchProduct();\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Div>\n      <div className=\"home__container\">\n        <img className=\"home__image\" src={banner} alt=\"\" />\n        <div className=\"home__row\">\n          {items.map((product) => (\n            <div className=\"home__item\" key={product.product_id}>\n              <Product\n                product_id={product.product_id}\n                title={product.title}\n                price={product.price}\n                rating={product.rating}\n                image={product.image}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </Div>\n  );\n};\n\nexport default Home;"],"names":["host","concat","DOMAIN","getCart","async","response","fetch","method","headers","authtoken","localStorage","getItem","ok","Error","json","error","console","status","message","postCart","product_id","quantity","body","JSON","stringify","deletecart","putCart","bulkPostCart","cartItems","cartList","findInObjectArray","arr","key","value","i","length","union","databaseCart","reduxCart","forEach","item","push","difference","mergeCart","findIndexof","cart","FinalBalance","total","price","Div","styled","div","_templateObject","_taggedTemplateLiteral","props","title","image","rating","useSelector","state","dispatch","useDispatch","_jsxs","children","className","_jsx","Array","fill","map","_","src","alt","onClick","index","updateToCart","info","addToCart","Home","items","setItems","useState","fetchProduct","responceProduct","data","element","parseFloat","Items","useEffect","banner","product","Product"],"sourceRoot":""}